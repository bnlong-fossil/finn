// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from example.djinni

#include <iostream> // for debugging
#include <cassert>
#include "wrapper_marshal.hpp"
#include "base_record.hpp"

#include "dh__base_record.hpp"
#include "dh__hien.hpp"

static void(*s_py_callback_base_record___delete)(DjinniRecordHandle * );
void base_record_add_callback___delete(void(* ptr)(DjinniRecordHandle * )) {
    s_py_callback_base_record___delete = ptr;
}

void base_record___delete(DjinniRecordHandle * drh) {
    s_py_callback_base_record___delete(drh);
}
void optional_base_record___delete(DjinniOptionalRecordHandle * drh) {
    s_py_callback_base_record___delete((DjinniRecordHandle *) drh); // can't static cast, find better way
}
static DjinniString * ( * s_py_callback_base_record_get_base_record_f1)(DjinniRecordHandle *);

void base_record_add_callback_get_base_record_f1(DjinniString *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_base_record_get_base_record_f1 = ptr;
}

static DjinniString * ( * s_py_callback_base_record_get_base_record_f2)(DjinniRecordHandle *);

void base_record_add_callback_get_base_record_f2(DjinniString *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_base_record_get_base_record_f2 = ptr;
}

static DjinniString * ( * s_py_callback_base_record_get_base_record_f3)(DjinniRecordHandle *);

void base_record_add_callback_get_base_record_f3(DjinniString *( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_base_record_get_base_record_f3 = ptr;
}

static DjinniRecordHandle * ( * s_py_callback_base_record_python_create_base_record)(DjinniString *, DjinniString *, DjinniString *);

void base_record_add_callback_python_create_base_record(DjinniRecordHandle *( * ptr)(DjinniString *, DjinniString *, DjinniString *)) {
    s_py_callback_base_record_python_create_base_record = ptr;
}

djinni::Handle<DjinniRecordHandle> DjinniBaseRecord::fromCpp(const ::textsort::BaseRecord& dr) {
    auto  _field_hien = DjinniString::fromCpp(dr.hien);
    auto  _field_hien_1 = DjinniString::fromCpp(dr.hien_1);
    auto  _field_parent = DjinniString::fromCpp(dr.parent);

    djinni::Handle<DjinniRecordHandle> _aux(
        s_py_callback_base_record_python_create_base_record(
            _field_hien.release(),
            _field_hien_1.release(),
            _field_parent.release()),
        base_record___delete);
    return _aux;
}

::textsort::BaseRecord DjinniBaseRecord::toCpp(djinni::Handle<DjinniRecordHandle> dh) {
    std::unique_ptr<DjinniString> _field_hien(s_py_callback_base_record_get_base_record_f1(dh.get()));
    std::unique_ptr<DjinniString> _field_hien_1(s_py_callback_base_record_get_base_record_f2(dh.get()));
    std::unique_ptr<DjinniString> _field_parent(s_py_callback_base_record_get_base_record_f3(dh.get()));

    auto _aux = ::textsort::BaseRecord(
        DjinniString::toCpp(std::move( _field_hien)),
        DjinniString::toCpp(std::move( _field_hien_1)),
        DjinniString::toCpp(std::move( _field_parent)));
    return _aux;
}

djinni::Handle<DjinniOptionalRecordHandle> DjinniBaseRecord::fromCpp(std::experimental::optional<::textsort::BaseRecord> dc) {
    if (dc == std::nullopt) {
        return nullptr;
    }
    return djinni::optionals::toOptionalHandle(DjinniBaseRecord::fromCpp(std::move(* dc)), optional_base_record___delete);
}

std::experimental::optional<::textsort::BaseRecord>DjinniBaseRecord::toCpp(djinni::Handle<DjinniOptionalRecordHandle> dh) {
     if (dh) {
        return std::experimental::optional<::textsort::BaseRecord>(DjinniBaseRecord::toCpp(djinni::optionals::fromOptionalHandle(std::move(dh), base_record___delete)));
    }
    return std::nullopt;
}

